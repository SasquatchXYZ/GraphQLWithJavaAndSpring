type Query {
    creatures: [Creature]
}

type Mutation {
    changePetName(id: ID!, newName: String!): ChangePetNamePayload
}

type ChangePetNamePayload {
    pet: Pet
}

input PetSearchInput {
    namePattern: String
    ownerPattern: String
}

interface Pet {
    id: ID!
    name: String
    color: String
}

type Dog implements Pet {
    id: ID!
    name: String
    color: String
    barks: Boolean
}

type Cat implements Pet {
    id: ID!
    name: String
    color: String
    meows: Boolean
}

type Person {
    name: String
}

type Human {
    name: String
}

union Creature = Dog | Cat | Human